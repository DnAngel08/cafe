// <auto-generated />
using System;
using Coffe_Shiuma.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coffe_Shiuma.Server.Migrations
{
    [DbContext(typeof(CafeteriaStoreContext))]
    [Migration("20230621062504_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Coffe_Shiuma.Shared.Bebida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.Cafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("SpecialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.CafeBebida", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.Property<int?>("BebidaId")
                        .HasColumnType("int");

                    b.Property<int?>("CafeId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("BebidaId");

                    b.HasIndex("CafeId");

                    b.ToTable("CafeBebida");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.CafeSpecial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specials");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.Cafe", b =>
                {
                    b.HasOne("Coffe_Shiuma.Shared.CafeSpecial", "Special")
                        .WithMany()
                        .HasForeignKey("SpecialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Special");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.CafeBebida", b =>
                {
                    b.HasOne("Coffe_Shiuma.Shared.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId");

                    b.HasOne("Coffe_Shiuma.Shared.Cafe", null)
                        .WithMany("Bebidas")
                        .HasForeignKey("CafeId");

                    b.Navigation("Bebida");
                });

            modelBuilder.Entity("Coffe_Shiuma.Shared.Cafe", b =>
                {
                    b.Navigation("Bebidas");
                });
#pragma warning restore 612, 618
        }
    }
}
